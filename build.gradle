plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.palantir.docker" version "0.22.1"
	id "com.palantir.docker-run" version "0.22.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven {
		url "https://plugins.gradle.org/m2/"
	}
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes "Main-Class": "com.example.game.GameApplication"
	}

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.10.0'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	//implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '2.6.6'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.7.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.212'
	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
	implementation "com.palantir.gradle.docker:gradle-docker:0.22.1"
	implementation group: 'redis.clients', name: 'jedis', version: '4.2.3'


}

tasks.named('test') {
	useJUnitPlatform()
}

docker {
	name "game:0.1"
	files "$buildDir/libs/${project.name}-${project.version.toString().toLowerCase()}.jar"
	buildArgs(['JAR_FILE': "${project.name}-${project.version.toString().toLowerCase()}.jar"])
}

dockerRun {
	name "game"
	image "game:0.1"
	ports '8080:8080'
	clean true
	daemonize false
}





